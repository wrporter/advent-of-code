import { Solution } from './solution';

const solution = new Solution();
const input = solution.readInput();

describe(`Day ${solution.day}`, () => {
    const tests = [
//         {
//             input: `        ...#
//         .#..
//         #...
//         ....
// ...#.......#
// ........#...
// ..#....#....
// ..........#.
//         ...#....
//         .....#..
//         .#......
//         ......#.
//
// 10R5L5R10L4R5L5`,
//             args1: [],
//             args2: [4],
//             want1: 6032,
//             want2: 5031,
//         },
        {
            input: `    ...#.#..
    .#......
    #.....#.
    ........
    ...#
    #...
    ....
    ..#.
..#....#
........
.....#..
........
#...
..#.
....
....

10R5L5R10L4R5L5`,
            args1: [],
            args2: [4],
            want1: 10012,
            want2: 10006,
        },
        {
            input: `     ..........
     ..........
     ..........
     ..........
     ..........
     .....
     .....
     .....
     .....
     .....
..........
..........
..........
..........
..........
.....
.....
.....
.....
.....

L2R1R2R3L3L8L5R1R3L3R1R1L1L2L4R1R6R3L2L6L1L2`,
            args1: [],
            args2: [5],
            want1: 7038,
            want2: 9028,
        },
        {
            input,
            args1: [],
            args2: [50],
            want1: 1484,
            want2: 142228,
        },
    ];

    test.each(tests)('Part 1 - Test %#', ({ input, want1, args1 }) => {
        expect(solution.part1(input, args1)).toEqual(want1);
    });

    test.each(tests)('Part 2 - Test %#', ({ input, want2, args2 }) => {
        expect(solution.part2(input, args2)).toEqual(want2);
    });
});
